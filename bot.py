import os
from telegram import Update, ReplyKeyboardRemove
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    ConversationHandler,
    ContextTypes,
    filters,
)

TOKEN = os.getenv("BOT_TOKEN")
ADMIN_ID = int(os.getenv("ADMIN_ID"))

NAME, CITY, WHY = range(3)

async def —Å—Ç–∞—Ä—Ç(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Successful People Club, {update.effective_user.first_name}.\n"
        "–ß—Ç–æ–±—ã –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É, –Ω–∞–ø–∏—à–∏—Ç–µ /–∑–∞—è–≤–∫–∞.\n"
        "–û—Ç–º–µ–Ω–∏—Ç—å ‚Äî /–æ—Ç–º–µ–Ω–∞."
    )

async def –∑–∞—è–≤–∫–∞(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?")
    return NAME

async def get_name(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["name"] = update.message.text
    await update.message.reply_text("–ò–∑ –∫–∞–∫–æ–≥–æ –≤—ã –≥–æ—Ä–æ–¥–∞?")
    return CITY

async def get_city(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["city"] = update.message.text
    await update.message.reply_text("–ü–æ—á–µ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤—Å—Ç—É–ø–∏—Ç—å –≤ –∫–ª—É–±?")
    return WHY

async def get_why(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["why"] = update.message.text
    user = context.user_data

    tg_user = update.effective_user
    if tg_user.username:
        user_link = f"@{tg_user.username}"
    else:
        user_link = f"[–±–µ–∑ username](tg://user?id={tg_user.id})"

    text = (
        "üì© –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –∫–ª—É–±:\n"
        f"üë§ –ò–º—è: {user['name']}\n"
        f"üèôÔ∏è –ì–æ—Ä–æ–¥: {user['city']}\n"
        f"üí¨ –ü–æ—á–µ–º—É: {user['why']}\n"
        f"Telegram: {user_link}"
    )

    await update.message.reply_text(
        "–°–ø–∞—Å–∏–±–æ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –ø–æ—Å–ª–µ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è –∑–∞—è–≤–∫–∏.",
        reply_markup=ReplyKeyboardRemove()
    )

    await context.bot.send_message(chat_id=ADMIN_ID, text=text, parse_mode="Markdown")

    return ConversationHandler.END

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ó–∞—è–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.", reply_markup=ReplyKeyboardRemove())
    return ConversationHandler.END

def main():
    app = Application.builder().token(TOKEN).build()

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("–∑–∞—è–≤–∫–∞", –∑–∞—è–≤–∫–∞)],
        states={
            NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_name)],
            CITY: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_city)],
            WHY:  [MessageHandler(filters.TEXT & ~filters.COMMAND, get_why)],
        },
        fallbacks=[CommandHandler("–æ—Ç–º–µ–Ω–∞", cancel)],
    )

    app.add_handler(CommandHandler("—Å—Ç–∞—Ä—Ç", —Å—Ç–∞—Ä—Ç))
    app.add_handler(conv_handler)

    app.run_polling()

if __name__ == "__main__":
    main()
